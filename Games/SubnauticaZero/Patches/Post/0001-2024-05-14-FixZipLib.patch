diff -Naur a/Assembly-CSharp-firstpass/ICSharpCode/SharpZipLib/Core/DirectoryEventArgs.cs Out/Assembly-CSharp-firstpass/ICSharpCode/SharpZipLib/Core/DirectoryEventArgs.cs
--- a/Assembly-CSharp-firstpass/ICSharpCode/SharpZipLib/Core/DirectoryEventArgs.cs	2024-05-14 19:55:55.146249908 +0000
+++ Out/Assembly-CSharp-firstpass/ICSharpCode/SharpZipLib/Core/DirectoryEventArgs.cs	2024-05-14 20:41:00.030333303 +0000
@@ -19,7 +19,7 @@
 	}
 
 	[MethodImpl(MethodImplOptions.NoInlining)]
-	public DirectoryEventArgs(string name, bool hasMatchingFiles)
+	public DirectoryEventArgs(string name, bool hasMatchingFiles): base(name)
 	{
 		throw null;
 	}
diff -Naur a/Assembly-CSharp-firstpass/ICSharpCode/SharpZipLib/Core/ExtendedPathFilter.cs Out/Assembly-CSharp-firstpass/ICSharpCode/SharpZipLib/Core/ExtendedPathFilter.cs
--- a/Assembly-CSharp-firstpass/ICSharpCode/SharpZipLib/Core/ExtendedPathFilter.cs	2024-05-14 19:55:55.146249908 +0000
+++ Out/Assembly-CSharp-firstpass/ICSharpCode/SharpZipLib/Core/ExtendedPathFilter.cs	2024-05-14 20:41:50.078334847 +0000
@@ -76,19 +76,19 @@
 	}
 
 	[MethodImpl(MethodImplOptions.NoInlining)]
-	public ExtendedPathFilter(string filter, long minSize, long maxSize)
+	public ExtendedPathFilter(string filter, long minSize, long maxSize): base(filter)
 	{
 		throw null;
 	}
 
 	[MethodImpl(MethodImplOptions.NoInlining)]
-	public ExtendedPathFilter(string filter, DateTime minDate, DateTime maxDate)
+	public ExtendedPathFilter(string filter, DateTime minDate, DateTime maxDate): base(filter)
 	{
 		throw null;
 	}
 
 	[MethodImpl(MethodImplOptions.NoInlining)]
-	public ExtendedPathFilter(string filter, long minSize, long maxSize, DateTime minDate, DateTime maxDate)
+	public ExtendedPathFilter(string filter, long minSize, long maxSize, DateTime minDate, DateTime maxDate): base(filter)
 	{
 		throw null;
 	}
diff -Naur a/Assembly-CSharp-firstpass/ICSharpCode/SharpZipLib/Core/NameAndSizeFilter.cs Out/Assembly-CSharp-firstpass/ICSharpCode/SharpZipLib/Core/NameAndSizeFilter.cs
--- a/Assembly-CSharp-firstpass/ICSharpCode/SharpZipLib/Core/NameAndSizeFilter.cs	2024-05-14 19:55:55.146249908 +0000
+++ Out/Assembly-CSharp-firstpass/ICSharpCode/SharpZipLib/Core/NameAndSizeFilter.cs	2024-05-14 20:43:19.366337599 +0000
@@ -43,7 +43,7 @@
 	}
 
 	[MethodImpl(MethodImplOptions.NoInlining)]
-	public NameAndSizeFilter(string filter, long minSize, long maxSize)
+	public NameAndSizeFilter(string filter, long minSize, long maxSize): base(filter)
 	{
 		throw null;
 	}
diff -Naur a/Assembly-CSharp-firstpass/ICSharpCode/SharpZipLib/Encryption/ZipAESStream.cs Out/Assembly-CSharp-firstpass/ICSharpCode/SharpZipLib/Encryption/ZipAESStream.cs
--- a/Assembly-CSharp-firstpass/ICSharpCode/SharpZipLib/Encryption/ZipAESStream.cs	2024-05-14 19:55:55.146249908 +0000
+++ Out/Assembly-CSharp-firstpass/ICSharpCode/SharpZipLib/Encryption/ZipAESStream.cs	2024-05-14 20:48:06.834346462 +0000
@@ -53,7 +53,7 @@
 	}
 
 	[MethodImpl(MethodImplOptions.NoInlining)]
-	public ZipAESStream(Stream stream, ZipAESTransform transform, CryptoStreamMode mode)
+	public ZipAESStream(Stream stream, ZipAESTransform transform, CryptoStreamMode mode): base(stream, transform, mode)
 	{
 		throw null;
 	}
diff -Naur a/Assembly-CSharp-firstpass/ICSharpCode/SharpZipLib/Encryption/ZipAESTransform.cs Out/Assembly-CSharp-firstpass/ICSharpCode/SharpZipLib/Encryption/ZipAESTransform.cs
--- a/Assembly-CSharp-firstpass/ICSharpCode/SharpZipLib/Encryption/ZipAESTransform.cs	2024-05-14 19:55:55.146249908 +0000
+++ Out/Assembly-CSharp-firstpass/ICSharpCode/SharpZipLib/Encryption/ZipAESTransform.cs	2024-05-14 20:39:55.802331323 +0000
@@ -37,7 +37,7 @@
 	public byte[] _pwdVerifier;
 
 	[BepInEx.AssemblyPublicizer.OriginalAttributes(FieldAttributes.Private)]
-	public IncrementalHash _hmacsha1;
+	public object /* IncrementalHash */ _hmacsha1;
 
 	[BepInEx.AssemblyPublicizer.OriginalAttributes(FieldAttributes.Private)]
 	public byte[] _authCode;
diff -Naur a/Assembly-CSharp-firstpass/ICSharpCode/SharpZipLib/Zip/Compression/Streams/DeflaterOutputStream.cs Out/Assembly-CSharp-firstpass/ICSharpCode/SharpZipLib/Zip/Compression/Streams/DeflaterOutputStream.cs
--- a/Assembly-CSharp-firstpass/ICSharpCode/SharpZipLib/Zip/Compression/Streams/DeflaterOutputStream.cs	2024-05-14 19:55:55.150249908 +0000
+++ Out/Assembly-CSharp-firstpass/ICSharpCode/SharpZipLib/Zip/Compression/Streams/DeflaterOutputStream.cs	2024-05-14 20:38:56.794329504 +0000
@@ -212,7 +212,7 @@
 
 	[MethodImpl(MethodImplOptions.NoInlining)]
 	[BepInEx.AssemblyPublicizer.OriginalAttributes(MethodAttributes.Family)]
-	public override void Dispose(bool disposing)
+	protected override void Dispose(bool disposing)
 	{
 		throw null;
 	}
diff -Naur a/Assembly-CSharp-firstpass/ICSharpCode/SharpZipLib/Zip/Compression/Streams/InflaterInputStream.cs Out/Assembly-CSharp-firstpass/ICSharpCode/SharpZipLib/Zip/Compression/Streams/InflaterInputStream.cs
--- a/Assembly-CSharp-firstpass/ICSharpCode/SharpZipLib/Zip/Compression/Streams/InflaterInputStream.cs	2024-05-14 19:55:55.150249908 +0000
+++ Out/Assembly-CSharp-firstpass/ICSharpCode/SharpZipLib/Zip/Compression/Streams/InflaterInputStream.cs	2024-05-14 20:38:53.702329409 +0000
@@ -167,7 +167,7 @@
 
 	[MethodImpl(MethodImplOptions.NoInlining)]
 	[BepInEx.AssemblyPublicizer.OriginalAttributes(MethodAttributes.Family)]
-	public override void Dispose(bool disposing)
+	protected override void Dispose(bool disposing)
 	{
 		throw null;
 	}
diff -Naur a/Assembly-CSharp-firstpass/ICSharpCode/SharpZipLib/Zip/DiskArchiveStorage.cs Out/Assembly-CSharp-firstpass/ICSharpCode/SharpZipLib/Zip/DiskArchiveStorage.cs
--- a/Assembly-CSharp-firstpass/ICSharpCode/SharpZipLib/Zip/DiskArchiveStorage.cs	2024-05-14 19:55:55.154249908 +0000
+++ Out/Assembly-CSharp-firstpass/ICSharpCode/SharpZipLib/Zip/DiskArchiveStorage.cs	2024-05-14 20:50:34.490351015 +0000
@@ -17,13 +17,13 @@
 	public string temporaryName_;
 
 	[MethodImpl(MethodImplOptions.NoInlining)]
-	public DiskArchiveStorage(ZipFile file, FileUpdateMode updateMode)
+	public DiskArchiveStorage(ZipFile file, FileUpdateMode updateMode): base(updateMode)
 	{
 		throw null;
 	}
 
 	[MethodImpl(MethodImplOptions.NoInlining)]
-	public DiskArchiveStorage(ZipFile file)
+	public DiskArchiveStorage(ZipFile file): base((FileUpdateMode) (object) null)
 	{
 		throw null;
 	}
diff -Naur a/Assembly-CSharp-firstpass/ICSharpCode/SharpZipLib/Zip/MemoryArchiveStorage.cs Out/Assembly-CSharp-firstpass/ICSharpCode/SharpZipLib/Zip/MemoryArchiveStorage.cs
--- a/Assembly-CSharp-firstpass/ICSharpCode/SharpZipLib/Zip/MemoryArchiveStorage.cs	2024-05-14 19:55:55.154249908 +0000
+++ Out/Assembly-CSharp-firstpass/ICSharpCode/SharpZipLib/Zip/MemoryArchiveStorage.cs	2024-05-14 20:50:38.386351135 +0000
@@ -23,13 +23,13 @@
 	}
 
 	[MethodImpl(MethodImplOptions.NoInlining)]
-	public MemoryArchiveStorage()
+	public MemoryArchiveStorage(): base((FileUpdateMode) (object) null)
 	{
 		throw null;
 	}
 
 	[MethodImpl(MethodImplOptions.NoInlining)]
-	public MemoryArchiveStorage(FileUpdateMode updateMode)
+	public MemoryArchiveStorage(FileUpdateMode updateMode): base(updateMode)
 	{
 		throw null;
 	}
diff -Naur a/Assembly-CSharp-firstpass/ICSharpCode/SharpZipLib/Zip/ZipHelperStream.cs Out/Assembly-CSharp-firstpass/ICSharpCode/SharpZipLib/Zip/ZipHelperStream.cs
--- a/Assembly-CSharp-firstpass/ICSharpCode/SharpZipLib/Zip/ZipHelperStream.cs	2024-05-14 19:55:55.154249908 +0000
+++ Out/Assembly-CSharp-firstpass/ICSharpCode/SharpZipLib/Zip/ZipHelperStream.cs	2024-05-14 20:38:45.650329160 +0000
@@ -131,7 +131,7 @@
 
 	[MethodImpl(MethodImplOptions.NoInlining)]
 	[BepInEx.AssemblyPublicizer.OriginalAttributes(MethodAttributes.Family)]
-	public override void Dispose(bool disposing)
+	protected override void Dispose(bool disposing)
 	{
 		throw null;
 	}
diff -Naur a/Assembly-CSharp-firstpass/ICSharpCode/SharpZipLib/Zip/ZipInputStream.cs Out/Assembly-CSharp-firstpass/ICSharpCode/SharpZipLib/Zip/ZipInputStream.cs
--- a/Assembly-CSharp-firstpass/ICSharpCode/SharpZipLib/Zip/ZipInputStream.cs	2024-05-14 19:55:55.154249908 +0000
+++ Out/Assembly-CSharp-firstpass/ICSharpCode/SharpZipLib/Zip/ZipInputStream.cs	2024-05-14 20:51:05.442351969 +0000
@@ -75,13 +75,13 @@
 	}
 
 	[MethodImpl(MethodImplOptions.NoInlining)]
-	public ZipInputStream(Stream baseInputStream)
+	public ZipInputStream(Stream baseInputStream): base(baseInputStream)
 	{
 		throw null;
 	}
 
 	[MethodImpl(MethodImplOptions.NoInlining)]
-	public ZipInputStream(Stream baseInputStream, int bufferSize)
+	public ZipInputStream(Stream baseInputStream, int bufferSize): base(baseInputStream)
 	{
 		throw null;
 	}
@@ -154,7 +154,7 @@
 
 	[MethodImpl(MethodImplOptions.NoInlining)]
 	[BepInEx.AssemblyPublicizer.OriginalAttributes(MethodAttributes.Family)]
-	public override void Dispose(bool disposing)
+	protected override void Dispose(bool disposing)
 	{
 		throw null;
 	}
diff -Naur a/Assembly-CSharp-firstpass/ICSharpCode/SharpZipLib/Zip/ZipOutputStream.cs Out/Assembly-CSharp-firstpass/ICSharpCode/SharpZipLib/Zip/ZipOutputStream.cs
--- a/Assembly-CSharp-firstpass/ICSharpCode/SharpZipLib/Zip/ZipOutputStream.cs	2024-05-14 19:55:55.154249908 +0000
+++ Out/Assembly-CSharp-firstpass/ICSharpCode/SharpZipLib/Zip/ZipOutputStream.cs	2024-05-14 20:51:12.154352176 +0000
@@ -70,13 +70,13 @@
 	}
 
 	[MethodImpl(MethodImplOptions.NoInlining)]
-	public ZipOutputStream(Stream baseOutputStream)
+	public ZipOutputStream(Stream baseOutputStream): base(baseOutputStream)
 	{
 		throw null;
 	}
 
 	[MethodImpl(MethodImplOptions.NoInlining)]
-	public ZipOutputStream(Stream baseOutputStream, int bufferSize)
+	public ZipOutputStream(Stream baseOutputStream, int bufferSize): base(baseOutputStream)
 	{
 		throw null;
 	}
diff -Naur a/Assembly-CSharp-firstpass/MathExtensions.cs Out/Assembly-CSharp-firstpass/MathExtensions.cs
--- a/Assembly-CSharp-firstpass/MathExtensions.cs	2024-05-14 19:55:55.350249914 +0000
+++ Out/Assembly-CSharp-firstpass/MathExtensions.cs	2024-05-14 20:04:43.158266187 +0000
@@ -4,7 +4,7 @@
 using System.Runtime.CompilerServices;
 using BepInEx.AssemblyPublicizer;
 using FMOD;
-using Platform.IO;
+using System.IO;
 using UnityEngine;
 
 public static class MathExtensions
diff -Naur a/Assembly-CSharp-firstpass/NullLogHandler.cs Out/Assembly-CSharp-firstpass/NullLogHandler.cs
--- a/Assembly-CSharp-firstpass/NullLogHandler.cs	2024-05-14 19:55:55.410249916 +0000
+++ Out/Assembly-CSharp-firstpass/NullLogHandler.cs	2024-05-14 20:50:47.966351430 +0000
@@ -5,7 +5,7 @@
 public class NullLogHandler : InterceptingLogHandler
 {
 	[MethodImpl(MethodImplOptions.NoInlining)]
-	public NullLogHandler(ILogger logger)
+	public NullLogHandler(ILogger logger): base(logger)
 	{
 		throw null;
 	}
diff -Naur a/Assembly-CSharp-firstpass/ProtoBuf/Meta/TypeModel.cs Out/Assembly-CSharp-firstpass/ProtoBuf/Meta/TypeModel.cs
--- a/Assembly-CSharp-firstpass/ProtoBuf/Meta/TypeModel.cs	2024-05-14 19:55:55.162249909 +0000
+++ Out/Assembly-CSharp-firstpass/ProtoBuf/Meta/TypeModel.cs	2024-05-14 20:47:25.626345192 +0000
@@ -39,6 +39,7 @@
 
 		[MethodImpl(MethodImplOptions.NoInlining)]
 		public DeserializeItemsIterator(TypeModel model, Stream source, PrefixStyle style, int expectedField, SerializationContext context)
+		: base(model, source, null, style, expectedField, null, context)
 		{
 			throw null;
 		}
diff -Naur a/Assembly-CSharp-firstpass/ProtoBuf/ProtoPartialMemberAttribute.cs Out/Assembly-CSharp-firstpass/ProtoBuf/ProtoPartialMemberAttribute.cs
--- a/Assembly-CSharp-firstpass/ProtoBuf/ProtoPartialMemberAttribute.cs	2024-05-14 19:55:55.162249909 +0000
+++ Out/Assembly-CSharp-firstpass/ProtoBuf/ProtoPartialMemberAttribute.cs	2024-05-14 20:50:17.606350494 +0000
@@ -21,7 +21,7 @@
 	}
 
 	[MethodImpl(MethodImplOptions.NoInlining)]
-	public ProtoPartialMemberAttribute(int tag, string memberName)
+	public ProtoPartialMemberAttribute(int tag, string memberName): base(tag)
 	{
 		throw null;
 	}
diff -Naur a/Assembly-CSharp-firstpass/ProtoBuf/Serializers/ArrayDecorator.cs Out/Assembly-CSharp-firstpass/ProtoBuf/Serializers/ArrayDecorator.cs
--- a/Assembly-CSharp-firstpass/ProtoBuf/Serializers/ArrayDecorator.cs	2024-05-14 19:55:55.158249909 +0000
+++ Out/Assembly-CSharp-firstpass/ProtoBuf/Serializers/ArrayDecorator.cs	2024-05-14 20:45:37.642341863 +0000
@@ -82,7 +82,7 @@
 	}
 
 	[MethodImpl(MethodImplOptions.NoInlining)]
-	public ArrayDecorator(TypeModel model, IProtoSerializer tail, int fieldNumber, bool writePacked, WireType packedWireType, Type arrayType, bool overwriteList, bool supportNull)
+	public ArrayDecorator(TypeModel model, IProtoSerializer tail, int fieldNumber, bool writePacked, WireType packedWireType, Type arrayType, bool overwriteList, bool supportNull) : base (tail)
 	{
 		throw null;
 	}
diff -Naur a/Assembly-CSharp-firstpass/ProtoBuf/Serializers/CharSerializer.cs Out/Assembly-CSharp-firstpass/ProtoBuf/Serializers/CharSerializer.cs
--- a/Assembly-CSharp-firstpass/ProtoBuf/Serializers/CharSerializer.cs	2024-05-14 19:55:55.158249909 +0000
+++ Out/Assembly-CSharp-firstpass/ProtoBuf/Serializers/CharSerializer.cs	2024-05-14 20:45:16.790341220 +0000
@@ -22,7 +22,7 @@
 	}
 
 	[MethodImpl(MethodImplOptions.NoInlining)]
-	public CharSerializer(TypeModel model)
+	public CharSerializer(TypeModel model): base(model)
 	{
 		throw null;
 	}
diff -Naur a/Assembly-CSharp-firstpass/ProtoBuf/Serializers/DefaultValueDecorator.cs Out/Assembly-CSharp-firstpass/ProtoBuf/Serializers/DefaultValueDecorator.cs
--- a/Assembly-CSharp-firstpass/ProtoBuf/Serializers/DefaultValueDecorator.cs	2024-05-14 19:55:55.158249909 +0000
+++ Out/Assembly-CSharp-firstpass/ProtoBuf/Serializers/DefaultValueDecorator.cs	2024-05-14 20:45:09.094340982 +0000
@@ -41,7 +41,7 @@
 	}
 
 	[MethodImpl(MethodImplOptions.NoInlining)]
-	public DefaultValueDecorator(TypeModel model, object defaultValue, IProtoSerializer tail)
+	public DefaultValueDecorator(TypeModel model, object defaultValue, IProtoSerializer tail): base(tail)
 	{
 		throw null;
 	}
diff -Naur a/Assembly-CSharp-firstpass/ProtoBuf/Serializers/FieldDecorator.cs Out/Assembly-CSharp-firstpass/ProtoBuf/Serializers/FieldDecorator.cs
--- a/Assembly-CSharp-firstpass/ProtoBuf/Serializers/FieldDecorator.cs	2024-05-14 19:55:55.158249909 +0000
+++ Out/Assembly-CSharp-firstpass/ProtoBuf/Serializers/FieldDecorator.cs	2024-05-14 20:45:41.742341989 +0000
@@ -43,7 +43,7 @@
 	}
 
 	[MethodImpl(MethodImplOptions.NoInlining)]
-	public FieldDecorator(Type forType, FieldInfo field, IProtoSerializer tail)
+	public FieldDecorator(Type forType, FieldInfo field, IProtoSerializer tail): base(tail)
 	{
 		throw null;
 	}
diff -Naur a/Assembly-CSharp-firstpass/ProtoBuf/Serializers/ImmutableCollectionDecorator.cs Out/Assembly-CSharp-firstpass/ProtoBuf/Serializers/ImmutableCollectionDecorator.cs
--- a/Assembly-CSharp-firstpass/ProtoBuf/Serializers/ImmutableCollectionDecorator.cs	2024-05-14 19:55:55.158249909 +0000
+++ Out/Assembly-CSharp-firstpass/ProtoBuf/Serializers/ImmutableCollectionDecorator.cs	2024-05-14 20:46:33.638343589 +0000
@@ -48,7 +48,7 @@
 
 	[MethodImpl(MethodImplOptions.NoInlining)]
 	[BepInEx.AssemblyPublicizer.OriginalAttributes(MethodAttributes.Assembly)]
-	public ImmutableCollectionDecorator(TypeModel model, Type declaredType, Type concreteType, IProtoSerializer tail, int fieldNumber, bool writePacked, WireType packedWireType, bool returnList, bool overwriteList, bool supportNull, MethodInfo builderFactory, MethodInfo add, MethodInfo addRange, MethodInfo finish)
+	public ImmutableCollectionDecorator(TypeModel model, Type declaredType, Type concreteType, IProtoSerializer tail, int fieldNumber, bool writePacked, WireType packedWireType, bool returnList, bool overwriteList, bool supportNull, MethodInfo builderFactory, MethodInfo add, MethodInfo addRange, MethodInfo finish) : base(model, declaredType, concreteType, tail, fieldNumber, writePacked, packedWireType, returnList, overwriteList, supportNull)
 	{
 		throw null;
 	}
diff -Naur a/Assembly-CSharp-firstpass/ProtoBuf/Serializers/ListDecorator.cs Out/Assembly-CSharp-firstpass/ProtoBuf/Serializers/ListDecorator.cs
--- a/Assembly-CSharp-firstpass/ProtoBuf/Serializers/ListDecorator.cs	2024-05-14 19:55:55.158249909 +0000
+++ Out/Assembly-CSharp-firstpass/ProtoBuf/Serializers/ListDecorator.cs	2024-05-14 20:48:29.990347176 +0000
@@ -166,6 +166,7 @@
 	[MethodImpl(MethodImplOptions.NoInlining)]
 	[BepInEx.AssemblyPublicizer.OriginalAttributes(MethodAttributes.Family)]
 	public ListDecorator(TypeModel model, Type declaredType, Type concreteType, IProtoSerializer tail, int fieldNumber, bool writePacked, WireType packedWireType, bool returnList, bool overwriteList, bool supportNull)
+	: base(tail)
 	{
 		throw null;
 	}
diff -Naur a/Assembly-CSharp-firstpass/ProtoBuf/Serializers/MemberSpecifiedDecorator.cs Out/Assembly-CSharp-firstpass/ProtoBuf/Serializers/MemberSpecifiedDecorator.cs
--- a/Assembly-CSharp-firstpass/ProtoBuf/Serializers/MemberSpecifiedDecorator.cs	2024-05-14 19:55:55.158249909 +0000
+++ Out/Assembly-CSharp-firstpass/ProtoBuf/Serializers/MemberSpecifiedDecorator.cs	2024-05-14 20:48:37.998347423 +0000
@@ -43,7 +43,7 @@
 	}
 
 	[MethodImpl(MethodImplOptions.NoInlining)]
-	public MemberSpecifiedDecorator(MethodInfo getSpecified, MethodInfo setSpecified, IProtoSerializer tail)
+	public MemberSpecifiedDecorator(MethodInfo getSpecified, MethodInfo setSpecified, IProtoSerializer tail): base(tail)
 	{
 		throw null;
 	}
diff -Naur a/Assembly-CSharp-firstpass/ProtoBuf/Serializers/NullDecorator.cs Out/Assembly-CSharp-firstpass/ProtoBuf/Serializers/NullDecorator.cs
--- a/Assembly-CSharp-firstpass/ProtoBuf/Serializers/NullDecorator.cs	2024-05-14 19:55:55.158249909 +0000
+++ Out/Assembly-CSharp-firstpass/ProtoBuf/Serializers/NullDecorator.cs	2024-05-14 20:48:51.246347832 +0000
@@ -43,7 +43,7 @@
 	}
 
 	[MethodImpl(MethodImplOptions.NoInlining)]
-	public NullDecorator(TypeModel model, IProtoSerializer tail)
+	public NullDecorator(TypeModel model, IProtoSerializer tail): base(tail)
 	{
 		throw null;
 	}
diff -Naur a/Assembly-CSharp-firstpass/ProtoBuf/Serializers/PropertyDecorator.cs Out/Assembly-CSharp-firstpass/ProtoBuf/Serializers/PropertyDecorator.cs
--- a/Assembly-CSharp-firstpass/ProtoBuf/Serializers/PropertyDecorator.cs	2024-05-14 19:55:55.158249909 +0000
+++ Out/Assembly-CSharp-firstpass/ProtoBuf/Serializers/PropertyDecorator.cs	2024-05-14 20:48:57.854348035 +0000
@@ -50,7 +50,7 @@
 	}
 
 	[MethodImpl(MethodImplOptions.NoInlining)]
-	public PropertyDecorator(TypeModel model, Type forType, PropertyInfo property, IProtoSerializer tail)
+	public PropertyDecorator(TypeModel model, Type forType, PropertyInfo property, IProtoSerializer tail): base(tail)
 	{
 		throw null;
 	}
diff -Naur a/Assembly-CSharp-firstpass/ProtoBuf/Serializers/TagDecorator.cs Out/Assembly-CSharp-firstpass/ProtoBuf/Serializers/TagDecorator.cs
--- a/Assembly-CSharp-firstpass/ProtoBuf/Serializers/TagDecorator.cs	2024-05-14 19:55:55.158249909 +0000
+++ Out/Assembly-CSharp-firstpass/ProtoBuf/Serializers/TagDecorator.cs	2024-05-14 20:49:08.174348354 +0000
@@ -93,7 +93,7 @@
 	}
 
 	[MethodImpl(MethodImplOptions.NoInlining)]
-	public TagDecorator(int fieldNumber, WireType wireType, bool strict, IProtoSerializer tail)
+	public TagDecorator(int fieldNumber, WireType wireType, bool strict, IProtoSerializer tail): base(tail)
 	{
 		throw null;
 	}
diff -Naur a/Assembly-CSharp-firstpass/ProtoBuf/Serializers/UriDecorator.cs Out/Assembly-CSharp-firstpass/ProtoBuf/Serializers/UriDecorator.cs
--- a/Assembly-CSharp-firstpass/ProtoBuf/Serializers/UriDecorator.cs	2024-05-14 19:55:55.158249909 +0000
+++ Out/Assembly-CSharp-firstpass/ProtoBuf/Serializers/UriDecorator.cs	2024-05-14 20:49:14.402348546 +0000
@@ -41,7 +41,7 @@
 	}
 
 	[MethodImpl(MethodImplOptions.NoInlining)]
-	public UriDecorator(TypeModel model, IProtoSerializer tail)
+	public UriDecorator(TypeModel model, IProtoSerializer tail): base(tail)
 	{
 		throw null;
 	}
diff -Naur a/Assembly-CSharp-firstpass/ScratchMemoryStream.cs Out/Assembly-CSharp-firstpass/ScratchMemoryStream.cs
--- a/Assembly-CSharp-firstpass/ScratchMemoryStream.cs	2024-05-14 19:55:55.378249915 +0000
+++ Out/Assembly-CSharp-firstpass/ScratchMemoryStream.cs	2024-05-14 20:38:41.938329046 +0000
@@ -115,7 +115,7 @@
 
 	[MethodImpl(MethodImplOptions.NoInlining)]
 	[BepInEx.AssemblyPublicizer.OriginalAttributes(MethodAttributes.Family)]
-	public override void Dispose(bool disposing)
+	protected override void Dispose(bool disposing)
 	{
 		throw null;
 	}
diff -Naur a/Assembly-CSharp-firstpass/ThrottledStream.cs Out/Assembly-CSharp-firstpass/ThrottledStream.cs
--- a/Assembly-CSharp-firstpass/ThrottledStream.cs	2024-05-14 19:55:55.414249916 +0000
+++ Out/Assembly-CSharp-firstpass/ThrottledStream.cs	2024-05-14 20:38:50.638329314 +0000
@@ -64,7 +64,7 @@
 
 	[MethodImpl(MethodImplOptions.NoInlining)]
 	[BepInEx.AssemblyPublicizer.OriginalAttributes(MethodAttributes.Family)]
-	public override void Dispose(bool disposing)
+	protected override void Dispose(bool disposing)
 	{
 		throw null;
 	}
diff -Naur a/Assembly-CSharp-firstpass/UWE/ArrayPool.cs Out/Assembly-CSharp-firstpass/UWE/ArrayPool.cs
--- a/Assembly-CSharp-firstpass/UWE/ArrayPool.cs	2024-05-14 19:55:55.318249913 +0000
+++ Out/Assembly-CSharp-firstpass/UWE/ArrayPool.cs	2024-05-14 20:48:15.854346741 +0000
@@ -16,7 +16,7 @@
 	public readonly ILRUQueue<T[]> mockLRUQueue;
 
 	[MethodImpl(MethodImplOptions.NoInlining)]
-	public ArrayPool(int elementSize, int bucketStride, int numBucketsToCheck = 0, int desiredMemoryCap = 0)
+	public ArrayPool(int elementSize, int bucketStride, int numBucketsToCheck = 0, int desiredMemoryCap = 0): base(elementSize, bucketStride, numBucketsToCheck, desiredMemoryCap)
 	{
 		throw null;
 	}
diff -Naur a/Assembly-CSharp-firstpass/UWE/NativeArrayPool.cs Out/Assembly-CSharp-firstpass/UWE/NativeArrayPool.cs
--- a/Assembly-CSharp-firstpass/UWE/NativeArrayPool.cs	2024-05-14 19:55:55.314249913 +0000
+++ Out/Assembly-CSharp-firstpass/UWE/NativeArrayPool.cs	2024-05-14 20:45:00.734340725 +0000
@@ -16,7 +16,7 @@
 	public readonly ILRUQueue<NativeArray<T>> mockLRUQueue;
 
 	[MethodImpl(MethodImplOptions.NoInlining)]
-	public NativeArrayPool(int elementSize, int bucketStride, int numBucketsToCheck = 0, int desiredMemoryCap = 0)
+	public NativeArrayPool(int elementSize, int bucketStride, int numBucketsToCheck = 0, int desiredMemoryCap = 0): base(elementSize, bucketStride, numBucketsToCheck, desiredMemoryCap)
 	{
 		throw null;
 	}
diff -Naur a/Assembly-CSharp-firstpass/UWE/ThreadSafeLinearArrayHeap.cs Out/Assembly-CSharp-firstpass/UWE/ThreadSafeLinearArrayHeap.cs
--- a/Assembly-CSharp-firstpass/UWE/ThreadSafeLinearArrayHeap.cs	2024-05-14 19:55:55.314249913 +0000
+++ Out/Assembly-CSharp-firstpass/UWE/ThreadSafeLinearArrayHeap.cs	2024-05-14 20:46:54.766344240 +0000
@@ -10,7 +10,7 @@
 	public object lockObject;
 
 	[MethodImpl(MethodImplOptions.NoInlining)]
-	public ThreadSafeLinearArrayHeap(int elementSize, int maxSize)
+	public ThreadSafeLinearArrayHeap(int elementSize, int maxSize): base(elementSize, maxSize)
 	{
 		throw null;
 	}
diff -Naur a/Assembly-CSharp-firstpass/VoxelandChunk.cs Out/Assembly-CSharp-firstpass/VoxelandChunk.cs
--- a/Assembly-CSharp-firstpass/VoxelandChunk.cs	2024-05-14 19:55:55.398249916 +0000
+++ Out/Assembly-CSharp-firstpass/VoxelandChunk.cs	2024-05-14 20:37:09.826326206 +0000
@@ -1359,20 +1359,4 @@
 	{
 		throw null;
 	}
-
-	[MethodImpl(MethodImplOptions.NoInlining)]
-	[SpecialName]
-	[BepInEx.AssemblyPublicizer.OriginalAttributes(MethodAttributes.Private)]
-	Transform IVoxelandChunk2.get_transform()
-	{
-		throw null;
-	}
-
-	[MethodImpl(MethodImplOptions.NoInlining)]
-	[SpecialName]
-	[BepInEx.AssemblyPublicizer.OriginalAttributes(MethodAttributes.Private)]
-	GameObject IVoxelandChunk2.get_gameObject()
-	{
-		throw null;
-	}
 }
\ No newline at end of file
